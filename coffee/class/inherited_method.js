// Generated by CoffeeScript 1.8.0
(function() {
  var First, Second, second,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  First = (function() {
    function First() {
      this.printConstructor = __bind(this.printConstructor, this);
      this.printName = __bind(this.printName, this);
    }

    First.prototype.name = "first";

    First.prototype.printName = function() {
      return console.log(this.name);
    };

    First.prototype.printConstructor = function() {
      return console.log(this.constructor);
    };

    return First;

  })();

  Second = (function(_super) {
    __extends(Second, _super);

    function Second() {
      this.getFName = __bind(this.getFName, this);
      return Second.__super__.constructor.apply(this, arguments);
    }

    Second.prototype.name = "second";

    Second.prototype.getFName = function() {
      return console.log(Second.__super__.getFName.apply(this, arguments).name);
    };

    return Second;

  })(First);

  second = new Second();

  second.printName();

  second.printConstructor();

  console.log(Second);

  console.log('****');

  second.getFName();

}).call(this);
