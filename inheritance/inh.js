// Generated by CoffeeScript 1.8.0
(function() {
  var A, B,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  A = (function() {
    function A() {
      this.say = __bind(this.say, this);
      this.name = "A";
    }

    A.prototype.say = function() {
      return console.log(this.name);
    };

    A.prototype.notFat = function() {
      return console.log(this.name);
    };

    return A;

  })();

  B = (function(_super) {
    __extends(B, _super);

    function B() {
      this.age = 3;
    }

    B.prototype.fight = function() {
      return console.log("hey!");
    };

    return B;

  })(A);

}).call(this);
